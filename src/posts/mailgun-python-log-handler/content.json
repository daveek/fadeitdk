[
  {
    "id": "mailgun-python-log-handler",
    "title": "Python logging handler for Mailgun",
    "intro": "Sending application exception notifications via Mailgun.",
    "cover": "cover_wide.jpg",
    "date": "2015-10-12T11:25:30.132Z",
    "author": {
      "name": "Sander Sink",
      "gplus": "https://plus.google.com/+sander_sink_ozooner?rel=author",
      "photo": "src/assets/img/team/fadeit_team_sander_sink.jpg",
      "job_title": "Software engineer"
    },
    "content": [
      {
        "type": "p",
        "text": "Yet another reason to love python is the wonderful logging API provided by a standard library. Having a decent logger provided by the language saves developers time from integrating with some third-party library, but most importantly it contributes to a clean system where all modules use the same logger. Out of the box, there is a <a href=\"https://docs.python.org/3/library/logging.handlers.html\">handler</a> for almost any typical use-case, but the best feature is the option to create your own with relative ease. So-far we've been using <a href=\"https://docs.python.org/3/library/logging.handlers.html#smtphandler\">SMTPHandler</a>, but since moving to <a href=\"https://www.mailgun.com/\">Mailgun</a>, I decided to experiment with a custom handler to submit logs via their API instead. I'd like to mention that creating a custom logging handler is not a requirement, it is still possible to use their SMTP server with SMTP handler. To get started, we need to extend Handler baseclass and override emit method to make a POST request."
      },
      {
        "type": "code",
        "language": "python",
        "file": "mailgun_handler.py.txt"
      },
      {
        "type": "p",
        "text": "I have created a simple flask application that registers the handler and also implemented a route that triggers an error to test it out."
      },
      {
        "type": "code",
        "language": "python",
        "file": "server.py.txt"
      }
    ]
  }
]
